
  /**
   * Verifies that the actual ${class_to_assert} ${predicate}.
   * @return this assertion object.
   * @throws AssertionError - if the actual ${class_to_assert} ${neg_predicate}.${throws_javadoc}
   */
  public ${self_type} ${predicate}() ${throws}{
    // check that actual ${class_to_assert} we want to make assertions on is not null.
    isNotNull();

    // check
    if (!actual.${predicate}()) {
      failWithMessage("\nExpected that actual ${class_to_assert} ${predicate} but it ${neg_predicate}.");
    }
    
    // return the current assertion for method chaining
    return ${myself};
  }

  /**
   * Verifies that the actual ${class_to_assert} ${neg_predicate}.
   * @return this assertion object.
   * @throws AssertionError - if the actual ${class_to_assert} ${predicate}.${throws_javadoc}
   */
  public ${self_type} ${neg_predicate}() ${throws}{
    // check that actual ${class_to_assert} we want to make assertions on is not null.
    isNotNull();

    // check
    if (actual.${predicate}()) {
      failWithMessage("\nExpected that actual ${class_to_assert} ${neg_predicate} but it ${predicate}.");
    }
    
    // return the current assertion for method chaining
    return ${myself};
  }