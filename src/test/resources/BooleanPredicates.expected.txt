package org.assertj.assertions.generator.data;

import org.assertj.core.api.AbstractAssert;

/**
 * {@link BooleanPredicates} specific assertions - Generated by CustomAssertionGenerator.
 */
public class BooleanPredicatesAssert extends AbstractAssert<BooleanPredicatesAssert, BooleanPredicates> {

  /**
   * Creates a new <code>{@link BooleanPredicatesAssert}</code> to make assertions on actual BooleanPredicates.
   * @param actual the BooleanPredicates we want to make assertions on.
   */
  public BooleanPredicatesAssert(BooleanPredicates actual) {
    super(actual, BooleanPredicatesAssert.class);
  }

  /**
   * An entry point for BooleanPredicatesAssert to follow AssertJ standard <code>assertThat()</code> statements.<br>
   * With a static import, one can write directly: <code>assertThat(myBooleanPredicates)</code> and get specific assertion with code completion.
   * @param actual the BooleanPredicates we want to make assertions on.
   * @return a new <code>{@link BooleanPredicatesAssert}</code>
   */
  public static BooleanPredicatesAssert assertThat(BooleanPredicates actual) {
    return new BooleanPredicatesAssert(actual);
  }

  /**
   * Verifies that the actual BooleanPredicates canBeGood.
   * @return this assertion object.
   * @throws AssertionError - if the actual BooleanPredicates cannotBeGood.
   */
  public BooleanPredicatesAssert canBeGood() {
    // check that actual BooleanPredicates we want to make assertions on is not null.
    isNotNull();

    // check
    if (!actual.canBeGood()) {
      failWithMessage("\nExpected that actual BooleanPredicates canBeGood but it cannotBeGood.");
    }
    
    // return the current assertion for method chaining
    return this;
  }

  /**
   * Verifies that the actual BooleanPredicates cannotBeGood.
   * @return this assertion object.
   * @throws AssertionError - if the actual BooleanPredicates canBeGood.
   */
  public BooleanPredicatesAssert cannotBeGood() {
    // check that actual BooleanPredicates we want to make assertions on is not null.
    isNotNull();

    // check
    if (actual.canBeGood()) {
      failWithMessage("\nExpected that actual BooleanPredicates cannotBeGood but it canBeGood.");
    }
    
    // return the current assertion for method chaining
    return this;
  }

  /**
   * Verifies that the actual BooleanPredicates's good is equal to the given one.
   * @param good the given good to compare the actual BooleanPredicates's good to.
   * @return this assertion object.
   * @throws AssertionError - if the actual BooleanPredicates's good is not equal to the given one.
   */
  public BooleanPredicatesAssert hasGood(boolean good) {
    // check that actual BooleanPredicates we want to make assertions on is not null.
    isNotNull();

    // overrides the default error message with a more explicit one
    String assertjErrorMessage = "\nExpected good of:\n  <%s>\nto be:\n  <%s>\nbut was:\n  <%s>";
    
    // check
    boolean actualGood = actual.getGood();
    if (actualGood != good) {
      failWithMessage(assertjErrorMessage, actual, good, actualGood);
    }

    // return the current assertion for method chaining
    return this;
  }

  /**
   * Verifies that the actual BooleanPredicates hasGood.
   * @return this assertion object.
   * @throws AssertionError - if the actual BooleanPredicates doesNotHaveGood.
   */
  public BooleanPredicatesAssert hasGood() {
    // check that actual BooleanPredicates we want to make assertions on is not null.
    isNotNull();

    // check
    if (!actual.hasGood()) {
      failWithMessage("\nExpected that actual BooleanPredicates hasGood but it doesNotHaveGood.");
    }
    
    // return the current assertion for method chaining
    return this;
  }

  /**
   * Verifies that the actual BooleanPredicates doesNotHaveGood.
   * @return this assertion object.
   * @throws AssertionError - if the actual BooleanPredicates hasGood.
   */
  public BooleanPredicatesAssert doesNotHaveGood() {
    // check that actual BooleanPredicates we want to make assertions on is not null.
    isNotNull();

    // check
    if (actual.hasGood()) {
      failWithMessage("\nExpected that actual BooleanPredicates doesNotHaveGood but it hasGood.");
    }
    
    // return the current assertion for method chaining
    return this;
  }

  /**
   * Verifies that the actual BooleanPredicates isGood.
   * @return this assertion object.
   * @throws AssertionError - if the actual BooleanPredicates isNotGood.
   */
  public BooleanPredicatesAssert isGood() {
    // check that actual BooleanPredicates we want to make assertions on is not null.
    isNotNull();

    // check
    if (!actual.isGood()) {
      failWithMessage("\nExpected that actual BooleanPredicates isGood but it isNotGood.");
    }
    
    // return the current assertion for method chaining
    return this;
  }

  /**
   * Verifies that the actual BooleanPredicates isNotGood.
   * @return this assertion object.
   * @throws AssertionError - if the actual BooleanPredicates isGood.
   */
  public BooleanPredicatesAssert isNotGood() {
    // check that actual BooleanPredicates we want to make assertions on is not null.
    isNotNull();

    // check
    if (actual.isGood()) {
      failWithMessage("\nExpected that actual BooleanPredicates isNotGood but it isGood.");
    }
    
    // return the current assertion for method chaining
    return this;
  }

  /**
   * Verifies that the actual BooleanPredicates shouldBeGood.
   * @return this assertion object.
   * @throws AssertionError - if the actual BooleanPredicates shouldNotBeGood.
   */
  public BooleanPredicatesAssert shouldBeGood() {
    // check that actual BooleanPredicates we want to make assertions on is not null.
    isNotNull();

    // check
    if (!actual.shouldBeGood()) {
      failWithMessage("\nExpected that actual BooleanPredicates shouldBeGood but it shouldNotBeGood.");
    }
    
    // return the current assertion for method chaining
    return this;
  }

  /**
   * Verifies that the actual BooleanPredicates shouldNotBeGood.
   * @return this assertion object.
   * @throws AssertionError - if the actual BooleanPredicates shouldBeGood.
   */
  public BooleanPredicatesAssert shouldNotBeGood() {
    // check that actual BooleanPredicates we want to make assertions on is not null.
    isNotNull();

    // check
    if (actual.shouldBeGood()) {
      failWithMessage("\nExpected that actual BooleanPredicates shouldNotBeGood but it shouldBeGood.");
    }
    
    // return the current assertion for method chaining
    return this;
  }

  /**
   * Verifies that the actual BooleanPredicates wasGood.
   * @return this assertion object.
   * @throws AssertionError - if the actual BooleanPredicates wasNotGood.
   */
  public BooleanPredicatesAssert wasGood() {
    // check that actual BooleanPredicates we want to make assertions on is not null.
    isNotNull();

    // check
    if (!actual.wasGood()) {
      failWithMessage("\nExpected that actual BooleanPredicates wasGood but it wasNotGood.");
    }
    
    // return the current assertion for method chaining
    return this;
  }

  /**
   * Verifies that the actual BooleanPredicates wasNotGood.
   * @return this assertion object.
   * @throws AssertionError - if the actual BooleanPredicates wasGood.
   */
  public BooleanPredicatesAssert wasNotGood() {
    // check that actual BooleanPredicates we want to make assertions on is not null.
    isNotNull();

    // check
    if (actual.wasGood()) {
      failWithMessage("\nExpected that actual BooleanPredicates wasNotGood but it wasGood.");
    }
    
    // return the current assertion for method chaining
    return this;
  }

  /**
   * Verifies that the actual BooleanPredicates willBeGood.
   * @return this assertion object.
   * @throws AssertionError - if the actual BooleanPredicates willNotBeGood.
   */
  public BooleanPredicatesAssert willBeGood() {
    // check that actual BooleanPredicates we want to make assertions on is not null.
    isNotNull();

    // check
    if (!actual.willBeGood()) {
      failWithMessage("\nExpected that actual BooleanPredicates willBeGood but it willNotBeGood.");
    }
    
    // return the current assertion for method chaining
    return this;
  }

  /**
   * Verifies that the actual BooleanPredicates willNotBeGood.
   * @return this assertion object.
   * @throws AssertionError - if the actual BooleanPredicates willBeGood.
   */
  public BooleanPredicatesAssert willNotBeGood() {
    // check that actual BooleanPredicates we want to make assertions on is not null.
    isNotNull();

    // check
    if (actual.willBeGood()) {
      failWithMessage("\nExpected that actual BooleanPredicates willNotBeGood but it willBeGood.");
    }
    
    // return the current assertion for method chaining
    return this;
  }

  /**
   * Verifies that the actual BooleanPredicates isBad.
   * @return this assertion object.
   * @throws AssertionError - if the actual BooleanPredicates isNotBad.
   */
  public BooleanPredicatesAssert isBad() {
    // check that actual BooleanPredicates we want to make assertions on is not null.
    isNotNull();

    // check
    if (!actual.bad) {
      failWithMessage("\nExpected that actual BooleanPredicates isBad but it isNotBad.");
    }
    
    // return the current assertion for method chaining
    return this;
  }

  /**
   * Verifies that the actual BooleanPredicates isNotBad.
   * @return this assertion object.
   * @throws AssertionError - if the actual BooleanPredicates isBad.
   */
  public BooleanPredicatesAssert isNotBad() {
    // check that actual BooleanPredicates we want to make assertions on is not null.
    isNotNull();

    // check
    if (actual.bad) {
      failWithMessage("\nExpected that actual BooleanPredicates isNotBad but it isBad.");
    }
    
    // return the current assertion for method chaining
    return this;
  }

  /**
   * Verifies that the actual BooleanPredicates canBeGoodField.
   * @return this assertion object.
   * @throws AssertionError - if the actual BooleanPredicates cannotBeGoodField.
   */
  public BooleanPredicatesAssert canBeGoodField() {
    // check that actual BooleanPredicates we want to make assertions on is not null.
    isNotNull();

    // check
    if (!actual.canBeGoodField) {
      failWithMessage("\nExpected that actual BooleanPredicates canBeGoodField but it cannotBeGoodField.");
    }
    
    // return the current assertion for method chaining
    return this;
  }

  /**
   * Verifies that the actual BooleanPredicates cannotBeGoodField.
   * @return this assertion object.
   * @throws AssertionError - if the actual BooleanPredicates canBeGoodField.
   */
  public BooleanPredicatesAssert cannotBeGoodField() {
    // check that actual BooleanPredicates we want to make assertions on is not null.
    isNotNull();

    // check
    if (actual.canBeGoodField) {
      failWithMessage("\nExpected that actual BooleanPredicates cannotBeGoodField but it canBeGoodField.");
    }
    
    // return the current assertion for method chaining
    return this;
  }

  /**
   * Verifies that the actual BooleanPredicates hasGoodField.
   * @return this assertion object.
   * @throws AssertionError - if the actual BooleanPredicates doesNotHaveGoodField.
   */
  public BooleanPredicatesAssert hasGoodField() {
    // check that actual BooleanPredicates we want to make assertions on is not null.
    isNotNull();

    // check
    if (!actual.hasGoodField) {
      failWithMessage("\nExpected that actual BooleanPredicates hasGoodField but it doesNotHaveGoodField.");
    }
    
    // return the current assertion for method chaining
    return this;
  }

  /**
   * Verifies that the actual BooleanPredicates doesNotHaveGoodField.
   * @return this assertion object.
   * @throws AssertionError - if the actual BooleanPredicates hasGoodField.
   */
  public BooleanPredicatesAssert doesNotHaveGoodField() {
    // check that actual BooleanPredicates we want to make assertions on is not null.
    isNotNull();

    // check
    if (actual.hasGoodField) {
      failWithMessage("\nExpected that actual BooleanPredicates doesNotHaveGoodField but it hasGoodField.");
    }
    
    // return the current assertion for method chaining
    return this;
  }

  /**
   * Verifies that the actual BooleanPredicates isGoodField.
   * @return this assertion object.
   * @throws AssertionError - if the actual BooleanPredicates isNotGoodField.
   */
  public BooleanPredicatesAssert isGoodField() {
    // check that actual BooleanPredicates we want to make assertions on is not null.
    isNotNull();

    // check
    if (!actual.isGoodField) {
      failWithMessage("\nExpected that actual BooleanPredicates isGoodField but it isNotGoodField.");
    }
    
    // return the current assertion for method chaining
    return this;
  }

  /**
   * Verifies that the actual BooleanPredicates isNotGoodField.
   * @return this assertion object.
   * @throws AssertionError - if the actual BooleanPredicates isGoodField.
   */
  public BooleanPredicatesAssert isNotGoodField() {
    // check that actual BooleanPredicates we want to make assertions on is not null.
    isNotNull();

    // check
    if (actual.isGoodField) {
      failWithMessage("\nExpected that actual BooleanPredicates isNotGoodField but it isGoodField.");
    }
    
    // return the current assertion for method chaining
    return this;
  }

  /**
   * Verifies that the actual BooleanPredicates shouldBeGoodField.
   * @return this assertion object.
   * @throws AssertionError - if the actual BooleanPredicates shouldNotBeGoodField.
   */
  public BooleanPredicatesAssert shouldBeGoodField() {
    // check that actual BooleanPredicates we want to make assertions on is not null.
    isNotNull();

    // check
    if (!actual.shouldBeGoodField) {
      failWithMessage("\nExpected that actual BooleanPredicates shouldBeGoodField but it shouldNotBeGoodField.");
    }
    
    // return the current assertion for method chaining
    return this;
  }

  /**
   * Verifies that the actual BooleanPredicates shouldNotBeGoodField.
   * @return this assertion object.
   * @throws AssertionError - if the actual BooleanPredicates shouldBeGoodField.
   */
  public BooleanPredicatesAssert shouldNotBeGoodField() {
    // check that actual BooleanPredicates we want to make assertions on is not null.
    isNotNull();

    // check
    if (actual.shouldBeGoodField) {
      failWithMessage("\nExpected that actual BooleanPredicates shouldNotBeGoodField but it shouldBeGoodField.");
    }
    
    // return the current assertion for method chaining
    return this;
  }

  /**
   * Verifies that the actual BooleanPredicates wasGoodField.
   * @return this assertion object.
   * @throws AssertionError - if the actual BooleanPredicates wasNotGoodField.
   */
  public BooleanPredicatesAssert wasGoodField() {
    // check that actual BooleanPredicates we want to make assertions on is not null.
    isNotNull();

    // check
    if (!actual.wasGoodField) {
      failWithMessage("\nExpected that actual BooleanPredicates wasGoodField but it wasNotGoodField.");
    }
    
    // return the current assertion for method chaining
    return this;
  }

  /**
   * Verifies that the actual BooleanPredicates wasNotGoodField.
   * @return this assertion object.
   * @throws AssertionError - if the actual BooleanPredicates wasGoodField.
   */
  public BooleanPredicatesAssert wasNotGoodField() {
    // check that actual BooleanPredicates we want to make assertions on is not null.
    isNotNull();

    // check
    if (actual.wasGoodField) {
      failWithMessage("\nExpected that actual BooleanPredicates wasNotGoodField but it wasGoodField.");
    }
    
    // return the current assertion for method chaining
    return this;
  }

  /**
   * Verifies that the actual BooleanPredicates willBeGoodField.
   * @return this assertion object.
   * @throws AssertionError - if the actual BooleanPredicates willNotBeGoodField.
   */
  public BooleanPredicatesAssert willBeGoodField() {
    // check that actual BooleanPredicates we want to make assertions on is not null.
    isNotNull();

    // check
    if (!actual.willBeGoodField) {
      failWithMessage("\nExpected that actual BooleanPredicates willBeGoodField but it willNotBeGoodField.");
    }
    
    // return the current assertion for method chaining
    return this;
  }

  /**
   * Verifies that the actual BooleanPredicates willNotBeGoodField.
   * @return this assertion object.
   * @throws AssertionError - if the actual BooleanPredicates willBeGoodField.
   */
  public BooleanPredicatesAssert willNotBeGoodField() {
    // check that actual BooleanPredicates we want to make assertions on is not null.
    isNotNull();

    // check
    if (actual.willBeGoodField) {
      failWithMessage("\nExpected that actual BooleanPredicates willNotBeGoodField but it willBeGoodField.");
    }
    
    // return the current assertion for method chaining
    return this;
  }

}
